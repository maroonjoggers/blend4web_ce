
项目管理器
**********


目录
^^^^

* 项目管理器

  * 项目管理器

  * 项目创建向导

  * Creating a Web Player Application

    * Project Settings

    * Deploying the Project

  * 项目信息

    * 命令

    * 项目参数

  * 项目导入

  * 项目导出

    * 命令

    * 项目参数

自版本 15.09，SDK 中包含一种项目管理功能，使它成为可能 ︰

   * 浏览完整列表和文件结构的项目;

   * 启动应用程序，在查看器中运行导出的场景，在Blender中打开blend文
     件;

   * 创建和配置新的应用程序，包括那些基于现成的模板;

   * 构建应用程序和并打包方便地部署在远程的服务器;

   * 将应用程序资源 （纹理、 音频和视频文件） 转换为其他格式，以确保
     跨 浏览器和跨平台的性能;

   * 自动重新导出应用程序的所有场景，包括导出到 JSON 和 HTML 格式;

   * 删除项目。


项目管理器
==========

SDK的首页的 *工具* 项中可以运行 *项目管理* 应用 。启动后，该应用程序将
输出 SDK 中的所有当前项目列表。

项目管理的命令位于页面的顶部。

   [图片]

*返回首页*
   返回到 Blend4Web SDK 索引页。

*新建工程*
   打开  项目创建 向导。

*导入项目*
   打开  project import 对话。

*导出项目*
   打开 project export  页。

*隐藏项目*
   可以用来隐藏项目。如果已经隐藏了此类项目，则此命令替换 "显示项目"
   命令。

*帮助*
   打开  帮助文件.

用于管理特定项目的命令。

注解: Some commands may not be available depending on the type of
  the project.

[图片]

1. Compile project (not available for Web Player JSON and Web
   Player HTML projects).

2. Check for missing or unnecessary API modules (not available for
   Web Player JSON and Web Player HTML projects).

      Activating this option will make the Project Manager check the
      modules used by the application and output the results of the
      check to the console. Possible warning messages are listed
      below:

      1. If one or more API modules are missing from the project's
         folder, the following message will be displayed:

         Module *module_name* is missing from the *project_name*
         project, please append it to the project's html files.

      [图片]

      2. If the project has one or more API modules that are not
         used anywhere in the program code, the following message will
         be displayed:

         Module *module_name* is no longer required, please remove it
         from the project's HTML files.

      [图片]

      3. In case no problems with missing/unnecessary modules have
         been detected, the following message will be displayed:

      [图片]

3. 从项目重新导出blend文件。

4. 转换媒体资源。

5. 导出和下载项目档案。

6. 移除项目

注解: 项目的所有路径都是从它的.b4w_project 文件中检索。

该项目的名称旁边，有链接到 项目信息页面 。这里也指定应用程序类型。应用
程序可以具有下列类型之一：

*播放器*
   可以使用 Web 播放器播放应用程序。

*开发*
   开发中的应用。

*构建*
   编译应用程序。


项目创建向导
============

该工具用于创建新的项目是列入项目管理应用程序中，由主页面上 "[Create
New Project]" 按钮执行。

   [图片]

"[Back to Projects]" 按钮可以用来返回到项目管理的主页面，而 "[Help]"
按钮可以用到访问 帮助文件.

1. 项目名称习惯为 "apps_dev/project_name",
   "deploy/assets/project_name", "blender/project_name" and
   "deploy/apps/project_name" 等名称的项目目录。

2. 在浏览器中所示的项目标题。

3. 项目作者的名字。

4. 添加应用程序模板。标准应用程序模板 ︰ html 文件，css 文件，js 文
   件 将添加到项目目录  "apps_dev/project_name".

5. 添加场景模板。标准的 json 文件将添加到
   "deploy/assets/project_name" 目录;blend文件将添加到
   "blender/project_name" 目录。

6. Use Material Library. Blend files of the material library will
   be copied to the project directory "blender/project_name", while
   the asset files will be copied to "deploy/assets/project_name"
   folder.

7. 复制项目管理脚本。Project.py 脚本将复制到项目目录。

8. 所有的项目文件将位于相同的目录中。在小项目中最好使用此选项，如课
   程 和范例。只有 "update" 项目类型可以用此选项。

9. 项目的类型。有几个选项 ︰

      * "External" - 引擎将取自 "deploy/apps/common/" 目录。只有应用
        程 序文件将被编译;

      * "Copy" - 引擎复制到已编译的应用程序目录。只有应用程序文件进
        行 编译;

      * "Compile" -引擎源代码应用程序的脚本一同编译;

      * "Update" - 项目目录的引擎将被取代;

      * "Web Player JSON" - json-file placed inside the project is
        run with the help of web-player inside SDK;

      * "Web Player HTML" - project is packed into single html-file,
        containing all required resources.

10. Javascript 优化级别。

    * "简单"— — 变量的名称替换代码;

    * "先进"— — 进行了代码优化;

    * "空格"— — 只有空格从代码中移除。

11. Web Player URL attributes. This tab is available only if
    "Engine Binding Type" parameter is set to "Web Player JSON" or
    "Web Player HTML".

    * "Show FPS" is used to display the FPS counter in the player’s
      top right corner.

    * "Auto-rotate camera" enables automatic camera rotation just
      after the scene loads.

    * "Disable social network buttons" disables social networks
      buttons on the control panel.

    * "Background transparency" enables transparency for the
      rendering area.

    * "Use compressed textures" enables loading of minified and
      compressed textures (in DDS format).


Creating a Web Player Application
=================================

The main advantage of Web Player applications is the ease of deploying
such applications on a website.

[图片]

Creating a Web Player application is simple. All you have to do when
creating a new project is select the "Web Player JSON" or "Web Player
HTML" option under the Engine Binding Type tab.

The parameters that are available for a Web Player project are mostly
the same as for any other type of project. The only exception is the
group of parameter known as the Web Player Params.


Project Settings
----------------

[图片]

This panel is only available if the "Web Player JSON" or "Web Player
HTML" option has been enabled. The parameters listed here are in
essence URL attributes that the Web Player application will use while
running the project.


Deploying the Project
---------------------

After you have completed your project, select the "deploy project"
option from the "Operations" panel on the Project Manager main page.
The project will be exported, packed into a single archive and
downloaded to the folder where your web browser stores all dowloaded
files.

To place the project on a webpage, you have to extract this archive
and upload its files (the "html" file and the "assets" directory) to a
web server using FTP, SSH or any other protocols supported by the
server.

注解: The internal structure of the archive and relative paths to
  its files should be retained after uploading the project files to a
  web server.

A Web Player HTML application can then be placed on any webpage by
using an "iframe" container. Here is an example of HTML code that can
be used for this:

   <!DOCTYPE html>
   <html>
   <head>
       <title>An Example Application</title>
   </head>
   <body>
       <iframe width="800" height="500" allowfullscreen src="/tutorials/examples/web_page_integration/example_scene.html"></iframe>
   </body>
   </html>

Deploying a JSON project is performed similarly, but instead of a
single HTML file it uses a combination of the Web Player app and a
JSON file that contains the actual scene.

   <!DOCTYPE html>
   <html>
   <head>
       <title>Another Example Application</title>
   </head>
   <body>
       <iframe width="800" height="500" allowfullscreen src="/apps/webplayer/webplayer.html?load=/tutorials/examples/web_page_integration/example_scene.json&show_fps"></iframe>
   </body>
   </html>


项目信息
========

此页包含有关选定项目的信息，可以在该项目的标题旁边的 "[info]" 链接查看
。

   [图片]


命令
----

*回到项目*
   返回到项目管理的主页面。

*帮助*
   打开  帮助文件.


项目参数
--------

项目名称
   项目名称

项目的标题。
   在浏览器中所示的项目标题。

*项目作者 / 公司*
   该项目的作者或开发商公司的名称。

*项目图标*
   该项目的图标。

*应用程序*
   应用程序的主 JSON 文件。

*引擎绑定类型*
   设置项目类型

*项目路径 （开发目录）*
   项目的目录。

*项目配置*
   项目的配置文件。

*构建目录*
   项目构建文件夹。

*Blend 目录*
   项目的blend文件目录的位置。

*资产目录*
   项目的媒体资产所在的位置目录。

*URL 参数*
   URL 参数 列表用来启动应用程序。

*JavaScript 混淆级别*
   Javascript 优化级别。

*JavaScript 编译忽略列表*
   项目脚本编译中的例外列表。

*CSS 编译忽略列表*
   项目样式表编译中的例外列表。

*部署目录资产前缀*
   在部署的应用程序的场景资源文件夹。


项目导入
========

导入项目工具是在 "[Import Project(s)]" 链接

点击该链接会打开标准的文件开启对话框，你可以选择需要导入的项目。


项目导出
========

项目输出窗口可以通过 "[Export Project(s)]" 链接访问。

   [图片]


命令
----

*回到项目*
   返回到项目管理的主页面。

*隐藏项目*
   隐藏项目。如果已经隐藏了此类项目，则此命令替换为   "[显示项目]" 命
   令。

*帮助*
   显示帮助页。

*导出项目*
   可以用来导出所选的项目。


项目参数
--------

*选择*
   显示项目是不是选择了要导出。

*名字*
   该项目的目录的名称。

*名称*
   项目的标题。

*作者*
   项目作者的名字。

*档案名称*
   导出的项目打包的档案名称。

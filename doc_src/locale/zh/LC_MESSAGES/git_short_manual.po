# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2016, Triumph
# This file is distributed under the same license as the Blend4Web. User
# Manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
msgid ""
msgstr ""
"Project-Id-Version: Blend4Web. User Manual v16.03\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-04-25 17:26+0300\n"
"PO-Revision-Date: 2016-04-04 16:20+0800\n"
"Last-Translator: \n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.2.0\n"

#: ../git_short_manual.rst:7
msgid "Team Work. Using Git"
msgstr "团队工作。使用 Git"

#: ../git_short_manual.rst
msgid "Table of Contents"
msgstr "目录"

#: ../git_short_manual.rst:16 ../git_short_manual.rst:421
msgid "Overview"
msgstr "概述"

#: ../git_short_manual.rst:18
msgid ""
"In order to organize team work a Git version control system can be used. "
"Using Git has a number of benefits as compared with other ways to "
"collaborate:"
msgstr "为了组织团队工作可以使用 Git 版本控制系统。使用 Git 与其他的方式进行协作相比有大量的好处 ︰"

#: ../git_short_manual.rst:20
msgid ""
"saving the history of changes with the possibility to roll back to "
"previous versions"
msgstr "保存更改历史，方便的回滚到以前版本"

#: ../git_short_manual.rst:21
msgid "synchronizing changes between users and automatic merging of changes"
msgstr "同步用户间的修改，自动合并修改"

#: ../git_short_manual.rst:22
msgid "working with large binary files is possible"
msgstr "可以用于大型的二进制文件"

#: ../git_short_manual.rst:24
msgid ""
"Git is a distributed system and every developer or designer has his own "
"local repository (storage). Syncing between the local repositories can be"
" performed via the central (\"shared\") storage, which can be located on "
"a dedicated machine (server). Access to the server can be organized "
"through SSH protocol."
msgstr ""
"Git 是一个分布式的系统，每个开发人员或设计师有他自己的本地存储库 （存储）。可以在本地存储库之间同步，通过中央的 （\"共享\"） "
"存储，放在于一个专用的机器 （服务器）。对服务器的访问可以通过 SSH 协议进行。"

#: ../git_short_manual.rst:26
msgid ""
"Although there are many GUIs for Git beginners, here the work with the "
"``git`` standard console utility is explained."
msgstr "尽管有很多图形用户界面为 Git 初学者准备，但这里解释如何使用标准控制台的 ``git`` 如何工作。"

#: ../git_short_manual.rst:32
msgid "Typical Workflow"
msgstr "典型的工作流"

#: ../git_short_manual.rst:34
msgid ""
"Files can be created, added or deleted during the work process in the "
"local repositories."
msgstr "可以在本地仓库创建、 添加或删除文件。"

#: ../git_short_manual.rst:35
msgid ""
"After a certain logical period of work is finished it is necessary to fix"
" (commit) the changes and/or synchronize with your team mates."
msgstr "当一段确定的工作完结后需要将修改 修复 （提交） 和/或 同步到你同事那。"

#: ../git_short_manual.rst:36
msgid ""
"Files are prepared for commit i.e. the accounting of changed, new and "
"deleted files and also the resetting of changes."
msgstr "文件已准备好提交，即已更改的审计、 新的和已删除的文件和也全部为更改重置了。"

#: ../git_short_manual.rst:37
msgid "Commit is performed."
msgstr "执行提交。"

#: ../git_short_manual.rst:38
msgid ""
"Local changes are uploaded into the shared storage and become available "
"for the colleagues."
msgstr "本地更改上载到共享存储并提供给同事。"

#: ../git_short_manual.rst:40
msgid ""
"A limited set of Git commands recommended for authoring applications and "
"their graphical resources is described below."
msgstr "一组有限的 Git 命令，建议作为创作应用程序和它们的图形资源，展示如下。"

#: ../git_short_manual.rst:42
msgid ""
"It's necessary to switch to the repository before executing the commands,"
" e.g.:"
msgstr "非常有必要在执行命令前切换代码库，例如 ︰"

#: ../git_short_manual.rst:55
msgid "Individual Settings"
msgstr "单独设置"

#: ../git_short_manual.rst:57
msgid "A new user can set up his name and email using the commands:"
msgstr "新用户可以使用这个命令设置他的姓名和电子邮件 ︰"

#: ../git_short_manual.rst:65
msgid "The set up data will be used in the changelog."
msgstr "设置数据将用于更新日志。"

#: ../git_short_manual.rst:73
msgid "Checking the Status"
msgstr "检查状态"

#: ../git_short_manual.rst:75
msgid ""
"It's recommended to check the state of the repository before, in progress"
" and after performing all the operations."
msgstr "建议在执行的所有操作之前,、 在进步和之后都检查存储库状态。"

#: ../git_short_manual.rst:77
msgid "Use this command to check the status:"
msgstr "使用此命令可以检查状态 ︰"

#: ../git_short_manual.rst:84
msgid ""
"The result of the ``git status`` command if all the commits were "
"performed and there are no new files:"
msgstr "如果所有提交了都执行并且没有新的文件 ``git status`` 命令的结果 ︰"

#: ../git_short_manual.rst:93
msgid ""
"Possible result of ``git status`` if there are changes. For example the "
":file:`apps_dev/firstperson/firstperson.js` and "
":file:`doc_src/git_short_manual.rst` files are changed and a new file "
":file:`123.txt` is created:"
msgstr ""
"如果有变化可能的  ``git status`` 结果。例如: "
":file:`apps_dev/firstperson/firstperson.js` 和 "
":file:`doc_src/git_short_manual.rst`  文件更和创建了新文件 :file:`123.txt` ："

#: ../git_short_manual.rst:117
msgid "Before the Commit"
msgstr "在提交前"

#: ../git_short_manual.rst:120
msgid "Checking changes (of the text files)"
msgstr "检查 （文本文件） 的变化"

#: ../git_short_manual.rst:122
msgid ""
"In case of text files it is recommended to view the introduced changes "
"before performing the commit."
msgstr "如果是文本文件的情况下，建议在执行提交之前查看介绍了的变化。"

#: ../git_short_manual.rst:124
msgid "Check what was changed in the whole directory:"
msgstr "检查在整个目录中的更改内容 ︰"

#: ../git_short_manual.rst:130
msgid "or in a specific file only:"
msgstr "或者特定的文件 ︰"

#: ../git_short_manual.rst:136
msgid "A possible result of the ``git diff`` command for a text file:"
msgstr "一个文本文件的 ``git diff`` 命令可能的结果 ︰"

#: ../git_short_manual.rst:155
msgid "Rolling back files"
msgstr "回滚文件"

#: ../git_short_manual.rst:157
msgid ""
"If the file was changed or deleted but it is necessary to recover it (to "
"the latest committed state) use the command:"
msgstr "如果文件被更改或删除，但需要恢复 （到最新的提交状态），请使用命令 ︰"

#: ../git_short_manual.rst:164
msgid ""
"The introduced changes will be canceled - this is why this command should"
" be performed with caution."
msgstr "引起的变更将会被取消 - 这就是为什么应谨慎执行此命令。"

#: ../git_short_manual.rst:168
msgid "Unwanted files"
msgstr "不需要的文件"

#: ../git_short_manual.rst:170
msgid ""
"If a file is listed in the ``Untracked files`` (``git status``), but "
"version control is not needed for it, it should be deleted or moved "
"beyond the working directory."
msgstr "如果文件列在 ``未跟踪文件``  （``git 状态``），但它不需要版本控制，它应删除或移到工作目录之外。"

#: ../git_short_manual.rst:180
msgid "Preparing for Commit"
msgstr "准备提交"

#: ../git_short_manual.rst:183
msgid "Adding files"
msgstr "添加文件"

#: ../git_short_manual.rst:185
msgid ""
"If you are happy with the changes, add the needed changed and/or new "
"files for commit."
msgstr "如果你对所做的更改满意，添加所需的改变 和/或 新文件到提交。"

#: ../git_short_manual.rst:192
msgid "Check the status again:"
msgstr "再次检查状态 ︰"

#: ../git_short_manual.rst:198
msgid ""
"Possible result of the ``git status`` command after adding some files "
"with the ``git add`` command:"
msgstr "``git status`` 命令后用 ``git add`` 添加一些文件的可能的结果 ︰"

#: ../git_short_manual.rst:216
msgid ""
"You can see that the :file:`apps_dev/firstperson/firstperson.js` and "
":file:`123.txt` files were added for commit and the "
":file:`doc_src/git_short_manual.rst` file was not added. To make things "
"easier it is recommended to either add such files for commit or cancel "
"their changes with the ``git checkout`` command."
msgstr ""
"你可以看到  :file:`apps_dev/firstperson/firstperson.js` 和 :file:`123.txt` "
"文件添加到提交  :file:`doc_src/git_short_manual.rst`  文件不添加。为了使事情更容易，建议使用 ``git "
"checkout`` 添加此类文件的提交或取消其更改。"

#: ../git_short_manual.rst:219
msgid "Removing files"
msgstr "删除文件"

#: ../git_short_manual.rst:221
msgid ""
"Some files can be marked as deleted from Git after performing the ``git "
"status`` command, for example:"
msgstr "在执行了 ``git status`` 命令后，一些文件可以被标记为删除，例如 ︰"

#: ../git_short_manual.rst:236
msgid ""
"In this case if deleting the file should be recorded (i.e. enter the "
"commit), perform the ``git rm`` command, for example:"
msgstr "在此情况下，如果删除该文件应该被记录下来 （即输入提交），执行  ``git rm`` 命令，例如 ︰"

#: ../git_short_manual.rst:242
msgid ""
"If the file was deleted by accident and its necessary to recover it, use "
"the ``git checkout`` command."
msgstr "如果该文件被意外删除，需要恢复它，使用 ``git checkout`` 命令。"

#: ../git_short_manual.rst:250
msgid "Commit"
msgstr "提交"

#: ../git_short_manual.rst:252
msgid "Perform commit with the command:"
msgstr "执行提交命令 ︰"

#: ../git_short_manual.rst:258
msgid ""
"A text editor window will show up (for example, **nano** or **vim**), in "
"which it's necessary to enter the commit comment in English."
msgstr "文本编辑器窗口会显示 (例如，**nano** 或 **vim**)，必须在其中输入英文的提交评论。"

#: ../git_short_manual.rst:284
msgid ""
"Save the changes and quit the editor (in **nano** Ctrl+O, then Ctrl+X; in"
" **vim** ZZ, or ESC :wq)."
msgstr "保存更改并退出编辑器 (在 **nano** 是 Ctrl + O，然后 Ctrl + X; 在  **vim**  ZZ，或按 ESC: wq)。"

#: ../git_short_manual.rst:286
msgid ""
"After commit it's recommended to recheck the status. Commit is performed "
"correctly if the ``git status`` command returns ``nothing to commit, "
"working directory clean``."
msgstr "在提交后它建议重新检查状态。如果 ``git status`` 命令将返回 ``无可提交的东西，工作文件夹干净``."

#: ../git_short_manual.rst:295
msgid "Syncing Between Repositories"
msgstr "存储库之间同步"

#: ../git_short_manual.rst:298
msgid "From the remote - to the local"
msgstr "从远程到本地"

#: ../git_short_manual.rst:300
msgid ""
"After all the commits are performed it's necessary to load the changes "
"from the remote (\"shared\") repository to the local one:"
msgstr "所有提交执行后，需要从远程 （\"共享\"） 资源库中加载所做的更改到本地库 ︰"

#: ../git_short_manual.rst:306
msgid ""
"Result of the ``git pull`` command if there are no changes in the remote "
"repository:"
msgstr "如果远程资源库中的任何更改 ``git pull``  命令的结果 ︰"

#: ../git_short_manual.rst:312
msgid ""
"Result of the ``git pull`` command if the remote repository contains "
"changes and syncing was successful:"
msgstr "如果远程资源库中包含的更改、同步的结果是成功的话，``git pull`` 命令的结果︰"

#: ../git_short_manual.rst:334
msgid ""
"If you wish it's possible to look up the changes made by your colleagues "
"using the following command:"
msgstr "如果你希望查找你同事所做的更改，使用下面的命令 ︰"

#: ../git_short_manual.rst:340
msgid ""
"The parameter of this command - in this case dbf3877..9f9700c - shows "
"between which commits exactly the changes were made. This parameter can "
"be conveniently selected in the console in the ``git pull`` results and "
"pasted with a mouse click (middle button) where you need."
msgstr ""
"此命令的参数 - 在案例  dbf3877..9f9700c  -显示哪些提交之间确切地进行了更改。此参数可以方便地在控制台的  ``git "
"pull``  结果中选择再用鼠标点击 （中间的按钮）粘贴到需要的地方。"

#: ../git_short_manual.rst:343
msgid "You can also view the changelog:"
msgstr "还可以查看更新日志 ︰"

#: ../git_short_manual.rst:350
msgid ""
"The ``git pull`` command does not always lead to a successful "
"synchronization. The result of ``git pull`` when there are conflicts:"
msgstr "``git pull`` 命令并不总是能同步成功。当有冲突时 ``git pull`` 的结果 ︰"

#: ../git_short_manual.rst:367
msgid "The steps to be taken at conflicts are described below."
msgstr "在冲突时所采取的步骤如下 ︰"

#: ../git_short_manual.rst:372
msgid "From the local - to the remote"
msgstr "从本地到远程"

#: ../git_short_manual.rst:374
msgid ""
"After that the changes should be uploaded from the local repository to "
"the remote (\"shared\") one to make the changes available for team mates."
msgstr "在那之后所做的更改，应从本地资源库上载到远程库 （\"共享\"）， 一个能为同事提供所做的更改的库。"

#: ../git_short_manual.rst:380
msgid ""
"The result of the ``git push`` command if the remote repository already "
"contains all the local changes:"
msgstr "如果远程资源库中已经包含了所有的本地更改的 ``git push`` 命令的结果 ︰"

#: ../git_short_manual.rst:386
msgid "The result of the ``git push`` command if synchronization was successful:"
msgstr "如果同步成功后  ``git push`` 命令的结果 ︰"

#: ../git_short_manual.rst:398
msgid ""
"The result of the ``git push`` command if synchronization was not "
"successful because the ``git pull`` command was not executed first:"
msgstr "如果同步不成功是因为 ``git pull`` 命令没有首先执行时，``git push`` 的结果 ︰"

#: ../git_short_manual.rst:409
msgid "You should execute the ``git pull`` command."
msgstr "你应该执行 ``git pull`` 命令。"

#: ../git_short_manual.rst:411
msgid ""
"The changes uploaded into the central repository can be received by other"
" developers with the ``git pull`` command."
msgstr "其他开发人员可以使用 ``git pull`` 命令收到上传到中央存储库中的更改。"

#: ../git_short_manual.rst:418
msgid "Resolving Conflicts"
msgstr "解决冲突"

#: ../git_short_manual.rst:423
msgid "Synchronization conflicts occur if both conditions are met"
msgstr "如果这两个条件都满足，就会发生同步冲突"

#: ../git_short_manual.rst:425
msgid "the same file was changed both in the local and remote repositories, and"
msgstr "同一文件同时在本地和远程资源库中更改，并"

#: ../git_short_manual.rst:426
msgid ""
"automatic merging of the changes didn't occur because the changes are in "
"the same place of the file."
msgstr "所做的更改的自动合并没有发生因为所做的更改在文件的同一个地方。"

#: ../git_short_manual.rst:428
msgid "Typical cases:"
msgstr "典型案例 ︰"

#: ../git_short_manual.rst:430
msgid ""
"a binary file (texture, blend file) was independently changed by two "
"developers"
msgstr "二进制文件 （纹理，blend文件） 已被两个开发人员独立修改"

#: ../git_short_manual.rst:431
msgid "different changes were introduced to the same line of the same text file"
msgstr "引起的修改在同一文本文件的同一行"

#: ../git_short_manual.rst:432
msgid "one developer has changed the file while the other has moved it and so on."
msgstr "一位开发已修改该文件，而另一位又移动它，等等。"

#: ../git_short_manual.rst:434
msgid ""
"Although synchronization conflicts are normal, if they happen too often "
"it slows down the work. It is recommended to notify your team mates about"
" start of working with the shared binary files, and also to perform "
"synchronization more often. It is necessary to effectively distribute the"
" work between developers to reduce the number of such shared files. This "
"can be achieved particularly through linking of all the scene's resources"
" from the separate blend files into the master file."
msgstr "虽然同步冲突是正常，单如果太过频繁发生会导致工作缓慢。在开始共享二进制文件，处理有关，执行更多的同步时建议要通知你的同事。需要将工作分开分发给开发人员能够减少这种共享的文件数目之间的工作。要做到这一点可以特别地将场景的资源从独自的各个blend文件链接到一个主文件中。"

#: ../git_short_manual.rst:438
msgid "The steps to be taken"
msgstr "可采取的步骤"

#: ../git_short_manual.rst:440
msgid ""
"It's not recommended to perform any files operations (modifying, "
"deleting) while the repository is in a conflict state."
msgstr "存储库处于冲突状态时，不建议执行任何文件操作 （修改、 删除） 。"

#: ../git_short_manual.rst:442
msgid "The first thing to do is to perform the ``git status`` command."
msgstr "第一件事是要执行 ``git status`` 命令。"

#: ../git_short_manual.rst:457
msgid ""
"A list of conflicting files can be found in the ``Unmerged paths`` "
"section."
msgstr "冲突的文件的列表可以在``Unmerged paths``  一节中找到。"

#: ../git_short_manual.rst:459
msgid "The order of the following steps is different for binary and text files."
msgstr "以下步骤的顺序在二进制文件和文本文件之间是不同的。"

#: ../git_short_manual.rst:462
msgid "Binary files"
msgstr "二进制文件"

#: ../git_short_manual.rst:464
msgid ""
"At this stage the conflicting binary files are in the same state as they "
"were in the local repository before the synchronization attempt. The "
"files are fully functional (for example they can be opened by graphics "
"editors)."
msgstr "在这个阶段，冲突的二进制文件是和尝试同步本地资源库之前处于相同的状态。文件是完全功能的 （例如他们可以被图形编辑器打开）。"

#: ../git_short_manual.rst:466
msgid ""
"In case of conflicting binary files it's necessary to sort out (with the "
"team mates or by yourself) which of the files should be left and which "
"should be discarded. Selecting can be performed with the ``git checkout``"
" command."
msgstr "有冲突的二进制文件的情况下，需要整理 （与同事或自己） 哪个文件应该留下，哪个要丢弃。选择可以使用 ``git checkout`` 命令执行。"

#: ../git_short_manual.rst:468
msgid ""
"Select the local version of the file (**- -ours**). To make sure that "
"it's local you can open it."
msgstr "选择该文件的本地版本 (**- -我们的**). 要确保本地可以打开它。"

#: ../git_short_manual.rst:474
msgid ""
"Select the remote version of the file (**- -theirs**). To make sure that "
"it's remote you can open it."
msgstr "选择该文件的远程版本 (**- -他们的**).确保远程可以打开它。"

#: ../git_short_manual.rst:480
msgid "Select the local version of the file again (**- -ours**)."
msgstr "再次选择该文件的本地版本 (**- -我们的**). "

#: ../git_short_manual.rst:486
msgid ""
"Eventually you have to stick to the right version of the file. In case "
"there is a threat of losing the work you may save the discarded file "
"outside the repository."
msgstr "最终你必须坚持正确的文件版本。万一这样对你的工作可能有风险，可以在存储库之外保存废弃的工作文件。"

#: ../git_short_manual.rst:490
msgid "Text files"
msgstr "文本文件"

#: ../git_short_manual.rst:492
msgid ""
"At this stage Git introduces both local and remote changes to the "
"conflicting text files, in a special format. Such text files are not "
"workable as a rule"
msgstr "在这一阶段 Git 特别指出了冲突文本格式的文件本地和远程的变化。此类文本的文件并不可行作为一项规则"

#: ../git_short_manual.rst:494
msgid ""
"Example. One developer changed the scene name from \"Blue Lizard\" to "
"\"Green Lizard\" in the application file and uploaded the changes into "
"the central repository. Another developer changed \"Blue Lizard\" to "
"\"Red Lizard\" in the same line, performed commit and executed the ``git "
"pull`` command. As a result this very developer will be responsible for "
"resolving the conflict. The following lines will be present in his "
"version of the application file:"
msgstr ""
"示例。一个开发人员在应用程序文件中更改场景名称从 \"蓝蜥蜴\" 到 \"绿蜥蜴\" 并将更改上传到中央存储库中。另一个开发人员在同一行更改 "
"\"蓝蜥蜴\" 为 \"红蜥蜴\"，执行提交和执行 ``git pull`` "
"命令。最后来提交修改的开发人员将负责解决冲突。他的版本的应用程序文件会有下面这根线 ︰"

#: ../git_short_manual.rst:504
msgid ""
"In case of conflicting text files the following steps can be taken. Files"
" with source code should be edited with or without respect to the changes"
" introduced by both parties. On the other hand, it is easier to reexport "
"the exported scene text files (ending with **.json**)."
msgstr ""
"在文本文件冲突的情况下，可以采取下列步骤。有更改和没更改的编辑源代码的文件的两部分。另一方面，很容易重新导出已导出的场景文本文件(后缀名为 "
"**.json**)."

#: ../git_short_manual.rst:508
msgid "Correcting commit"
msgstr "纠正提交"

#: ../git_short_manual.rst:510
msgid ""
"After selecting the required files or editing the changes, add them for "
"commit:"
msgstr "选择所需的文件或编辑所做的更改后，请将它们添加为提交 ︰"

#: ../git_short_manual.rst:517
msgid ""
"Possible result of ``git status`` command after adding the conflicting "
"files for commit:"
msgstr "添加冲突文件提交后，``git status`` 命令可能的结果 ︰"

#: ../git_short_manual.rst:527
msgid "Perform commit. It is recommended to leave the default comment:"
msgstr "执行提交。建议留下默认注释 ︰"

#: ../git_short_manual.rst:541
msgid ""
"Conflicts are resolved, the changes from the remote repository are "
"successfully applied in the local repository. Now the changes in the "
"local repository - including the just resolved conflict - can be uploaded"
" to the remote repository with the ``git push`` command."
msgstr ""
"解决冲突后，从远程资源库中的更改成功应用到本地资源库。现在-包括刚解决的冲突的本地存储库中的更改可以上载到远程资源库中，使用  ``git "
"push`` 命令。"

#: ../git_short_manual.rst:550
msgid "Tags"
msgstr "标签"

#: ../git_short_manual.rst:552
msgid ""
"Tags are intended for pointing at a certain commit, for example, to "
"specify a stable product version."
msgstr "标签用于指向一个确切的提交，例如，指定到一个稳定的产品版本。"

#: ../git_short_manual.rst:554
msgid "View the list of tags:"
msgstr "查看标记的列表 ︰"

#: ../git_short_manual.rst:561
msgid ""
"Create a tag for the release from June 3, 2013, pointing to the commit "
"with a stable product version:"
msgstr "从 2013 年 6 月 3 日创建一个标记为发行，指向同一个稳定的产品版本提交 ︰"

#: ../git_short_manual.rst:568
msgid "Check the commit tag information:"
msgstr "检查提交标签信息 ︰"

#: ../git_short_manual.rst:575
msgid "Roll back to the tag..."
msgstr "回滚到该标记..."

#: ../git_short_manual.rst:582
msgid "...and return:"
msgstr "...并回车："

#: ../git_short_manual.rst:589
msgid "Synchronize the tags with the remote repository:"
msgstr "从远程资源库中同步标签 ︰"

#: ../git_short_manual.rst:596
msgid "Delete the tag (if created by mistake):"
msgstr "删除标记 （如果错误地创建） ︰"

#: ../git_short_manual.rst:604
msgid "Other Useful Commands"
msgstr "其他有用的命令"

#: ../git_short_manual.rst:606
msgid "Check the log for January, 2012, show file names without merging commits:"
msgstr "检查2012 年 1 月日志，显示文件名称但不合并提交︰"

#: ../git_short_manual.rst:1 ../git_short_manual.rst:50
#: ../git_short_manual.rst:68 ../git_short_manual.rst:112
#: ../git_short_manual.rst:175 ../git_short_manual.rst:245
#: ../git_short_manual.rst:290 ../git_short_manual.rst:415
#: ../git_short_manual.rst:545
msgid "git"
msgstr "git"

#: ../git_short_manual.rst:50
msgid "individual settings"
msgstr "单独设置"

#: ../git_short_manual.rst:68
msgid "checking the status"
msgstr "检查状态"

#: ../git_short_manual.rst:112
msgid "preparing for commit"
msgstr "准备提交"

#: ../git_short_manual.rst:175
msgid "adding and removing files"
msgstr "添加和删除文件"

#: ../git_short_manual.rst:245
msgid "commit"
msgstr "提交"

#: ../git_short_manual.rst:290
msgid "synchronization between repositories"
msgstr "存储库之间同步"

#: ../git_short_manual.rst:415
msgid "resolving conflicts"
msgstr "解决冲突"

#: ../git_short_manual.rst:545
msgid "tags"
msgstr "标签"

